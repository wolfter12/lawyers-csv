{"version":3,"sources":["actions/types.js","configs/constants.js","configs/header-accessors.js","configs/papaparse.config.js","utils/data-format.js","parser/csv.js","utils/csv-required-fields-validator.js","utils/add-id.js","utils/add-duplication-field.js","components/UploadFile/UploadFile.js","components/UploadFile/index.js","actions/dataActions.js","actions/validationActions.js","configs/columns.js","utils/table-cell-validator.js","components/Table/Table.js","components/Table/index.js","components/Warning/Warning.js","components/Warning/index.js","components/App/App.js","components/App/index.js","reportWebVitals.js","reducers/dataReducer.js","reducers/validationReducer.js","reducers/loadingReducer.js","reducers/index.js","store.js","index.js"],"names":["PARSE_FILE","VALID_STRUCTURE","DELETE_DATA","LOADING","DATE_FORMATS","PHONE_FORMATS","LICENSE_NUMBER_FORMATS","WARNING_MESSAGE","INVALID_CELL","PHONE","EMAIL","YEARLY_INCOME","HAS_CHILDREN","LICENSE_STATES","options","header","worker","skipEmptyLines","transformHeader","str","_","camelCase","toLowerCase","comments","transform","value","phoneNumber","trim","some","reg","test","phone","toLower","emailFormatter","length","hasChildFormatter","yearlyIncome","Number","isNaN","String","parseFloat","toFixed","yearlyIncomeFormatter","split","filter","Boolean","map","state","statesJSON","find","name","abbreviation","undefined","join","licenseStatesFormatter","dynamicTyping","csv","file","Promise","complete","error","Papa","parse","schema","properties","fullName","type","minLength","email","required","csvRequiredFieldValidator","data","resolve","reject","validate","Ajv","compile","every","obj","addId","idx","id","addDuplicationField","arr","targetIdx","findIndex","item","duplicateWith","UploadFile","loading","useSelector","dispatch","useDispatch","Container","fluid","className","fileTypes","multiplyFiles","handleFiles","files","pop","changeIsLoading","Blob","then","requiredFieldValidator","valid","payload","catch","err","console","finally","parseFile","Button","variant","size","columns","Header","accessor","validator","row","isPhoneValid","emailValidator","isEmailValid","age","isInteger","isAgeValid","checkExperience","number","currentAge","experienceNumber","ageNumber","isExperienceValid","income","yearlyIncomeNumber","isYearlyIncomeValid","moment","isValid","diff","isExpirationDateValid","isHasChildrenValid","isLicenseNumberValid","isLicenseStateValid","Table","useTable","getTableProps","headerGroups","rows","prepareRow","bordered","hover","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","i","getRowProps","cells","cell","original","cellProps","getCellProps","hasOwnProperty","Warning","Alert","Heading","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","dataReducer","action","validationReducer","loadingReducer","rootReducer","combineReducers","isLoading","middleware","thunk","store","createStore","applyMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c2ddb13.chunk.js","sourcesContent":["export const PARSE_FILE = 'PARSE_FILE';\r\nexport const VALID_STRUCTURE = 'VALID_STRUCTURE';\r\nexport const ADD_FILE_NAME = 'ADD_FILE_NAME';\r\nexport const DELETE_DATA = 'DELETE_DATA';\r\nexport const LOADING = 'LOADING';\r\n","export const MIN_AGE = 21;\r\nexport const MAX_AGE = 150;\r\nexport const MIN_YEARLY_INCOME = 0;\r\nexport const MAX_YEARLY_INCOME = 1000000;\r\nexport const DATE_FORMATS = ['YYYY-MM-DD', 'MM/DD/YYYY'];\r\nexport const PHONE_FORMATS = [/^\\+1\\d{10}$/, /^1\\d{10}$/, /^\\d{10}$/];\r\nexport const LICENSE_NUMBER_FORMATS = [/^[a-zA-Z0-9]{6}$/];\r\nexport const WARNING_MESSAGE = 'File format is not correct';\r\nexport const WARNING_ALERT_VARIANT = 'danger';\r\nexport const INVALID_CELL = 'table-danger';\r\nexport const IMPORT_BUTTON_VARIANT = 'success';\r\n","export const ID = 'id';\r\nexport const FULL_NAME = 'fullName';\r\nexport const PHONE = 'phone';\r\nexport const EMAIL = 'email';\r\nexport const AGE = 'age';\r\nexport const EXPERIENCE = 'experience';\r\nexport const YEARLY_INCOME = 'yearlyIncome';\r\nexport const HAS_CHILDREN = 'hasChildren';\r\nexport const LICENSE_STATES = 'licenseStates';\r\nexport const EXPIRATION_DATE = 'expirationDate';\r\nexport const LICENSE_NUMBER = 'licenseNumber';\r\nexport const DUPLICATE_WITH = 'duplicateWith';\r\n","import _ from 'lodash';\r\nimport {\r\n  PHONE,\r\n  EMAIL,\r\n  HAS_CHILDREN,\r\n  YEARLY_INCOME,\r\n  LICENSE_STATES,\r\n} from './header-accessors';\r\nimport {\r\n  phoneFormatter,\r\n  emailFormatter,\r\n  hasChildFormatter,\r\n  yearlyIncomeFormatter,\r\n  licenseStatesFormatter,\r\n} from '../utils/data-format';\r\n\r\nconst dataNormalize = (value, header) => {\r\n  let str = _.trim(value, `'\" `);\r\n\r\n  switch (header) {\r\n    case PHONE:\r\n      return phoneFormatter(str);\r\n    case EMAIL:\r\n      return emailFormatter(str);\r\n    case HAS_CHILDREN:\r\n      return hasChildFormatter(str);\r\n    case YEARLY_INCOME:\r\n      return yearlyIncomeFormatter(str);\r\n    case LICENSE_STATES:\r\n      return licenseStatesFormatter(str);\r\n    default:\r\n      return str;\r\n  }\r\n};\r\n\r\nconst toPascalCase = (str) => _.camelCase(str.toLowerCase());\r\n\r\nconst options = {\r\n  header: true,\r\n  worker: false, // when true there is a problem with next parsing\r\n  skipEmptyLines: true,\r\n  transformHeader: toPascalCase,\r\n  comments: true,\r\n  transform: dataNormalize,\r\n  dynamicTyping: false, // can be a problem with display data\r\n};\r\n\r\nexport default options;\r\n","import _ from 'lodash';\r\nimport phone from 'phone';\r\nimport { PHONE_FORMATS } from '../configs/constants';\r\nimport statesJSON from '../configs/states_titlecase.json';\r\n\r\n// Phone\r\nexport const phoneFormatter = (phoneNumber) => {\r\n  const isValid = PHONE_FORMATS.some((reg) => reg.test(phoneNumber));\r\n  if (isValid) {\r\n    return phone(phoneNumber)[0];\r\n  }\r\n  return phoneNumber;\r\n};\r\n\r\n// Email\r\nexport const emailFormatter = (str) => _.toLower(str);\r\n\r\n// Yearly Income\r\nexport const yearlyIncomeFormatter = (value) => {\r\n  const yearlyIncome = Number(value);\r\n  if (Number.isNaN(yearlyIncome)) {\r\n    return value;\r\n  }\r\n  return String(Number.parseFloat(yearlyIncome).toFixed(2));\r\n};\r\n\r\n// Has children\r\nexport const hasChildFormatter = (value) => {\r\n  if (value.length === 0) {\r\n    return 'false';\r\n  }\r\n  return value.toLowerCase();\r\n};\r\n\r\n// License states\r\nexport const licenseStatesFormatter = (value) => {\r\n  const statesArr = /\\|/.test(value) ? value.split(/\\s*\\|\\s*/) : [value];\r\n  const statesAbbreviationArr = statesArr.filter(Boolean).map((str) => {\r\n    const state = statesJSON.find(({ name, abbreviation }) => {\r\n      return (\r\n        name.toLowerCase() === str.toLowerCase() ||\r\n        abbreviation.toLowerCase() === str.toLowerCase()\r\n      );\r\n    });\r\n    if (state !== undefined) {\r\n      return state.abbreviation;\r\n    }\r\n    return str; // If there is no such state in list return original value\r\n  });\r\n  return statesAbbreviationArr.join(' | ');\r\n};\r\n","import Papa from 'papaparse';\r\nimport options from '../configs/papaparse.config';\r\n\r\nconst csv = (file) => {\r\n  return new Promise((complete, error) => {\r\n    Papa.parse(file, { ...options, complete, error });\r\n  });\r\n};\r\n\r\nexport default csv;\r\n","import Ajv from 'ajv';\r\nimport { FULL_NAME, PHONE, EMAIL } from '../configs/header-accessors';\r\nimport { WARNING_MESSAGE } from '../configs/constants';\r\n\r\nconst schema = {\r\n  properties: {\r\n    fullName: { type: 'string', minLength: 1 },\r\n    phone: { type: 'string', minLength: 1 },\r\n    email: { type: 'string', minLength: 1 },\r\n  },\r\n  required: [FULL_NAME, PHONE, EMAIL],\r\n};\r\n\r\nconst csvRequiredFieldValidator = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    const ajv = new Ajv();\r\n    const validate = ajv.compile(schema);\r\n    const valid = data.every((obj) => validate(obj));\r\n    if (valid) {\r\n      resolve(data);\r\n    }\r\n    reject(WARNING_MESSAGE);\r\n  });\r\n};\r\n\r\nexport default csvRequiredFieldValidator;\r\n","const addId = (data) => {\r\n  return data.map((obj, idx) => ({ id: idx + 1, ...obj }));\r\n};\r\n\r\nexport default addId;\r\n","const addDuplicationField = (arr) => {\r\n  return arr.map((obj) => {\r\n    const { id, phone, email } = obj;\r\n    let targetIdx = arr.findIndex((item) => {\r\n      return (item.phone === phone || item.email === email) && item.id !== id;\r\n    });\r\n    const duplicateWith = targetIdx === -1 ? '' : arr[targetIdx].id;\r\n    return { ...obj, duplicateWith };\r\n  });\r\n};\r\n\r\nexport default addDuplicationField;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ReactFileReader from 'react-file-reader';\r\nimport {\r\n  parseFile,\r\n  deleteData,\r\n  changeIsLoading,\r\n} from '../../actions/dataActions';\r\nimport { changeValidity } from '../../actions/validationActions';\r\nimport { Button } from 'react-bootstrap';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { IMPORT_BUTTON_VARIANT } from '../../configs/constants';\r\n\r\nfunction UploadFile() {\r\n  const loading = useSelector((state) => state.loading);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFiles = (files) => {\r\n    if (!loading) {\r\n      const [file] = files;\r\n      if (file.name.split('.').pop() === 'csv') {\r\n        dispatch(changeIsLoading(true));\r\n        dispatch(parseFile(file));\r\n      } else {\r\n        dispatch(changeValidity(false));\r\n        dispatch(deleteData());\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid=\"md\" className=\"d-flex flex-row-reverse mt-4 mb-4\">\r\n      <ReactFileReader\r\n        fileTypes={['.csv']}\r\n        multiplyFiles={false}\r\n        handleFiles={handleFiles}\r\n      >\r\n        <Button variant={IMPORT_BUTTON_VARIANT} size=\"lg\">\r\n          Import users\r\n        </Button>\r\n      </ReactFileReader>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default UploadFile;\r\n","import UploadFile from './UploadFile';\r\nexport default UploadFile;\r\n","import { PARSE_FILE, VALID_STRUCTURE, DELETE_DATA, LOADING } from './types';\r\nimport { WARNING_MESSAGE } from '../configs/constants';\r\nimport csv from '../parser/csv';\r\nimport requiredFieldValidator from '../utils/csv-required-fields-validator';\r\nimport addId from '../utils/add-id';\r\nimport addDuplicationField from '../utils/add-duplication-field';\r\n\r\nexport const parseFile = (file) => (dispatch) => {\r\n  if (file instanceof Blob) {\r\n    csv(file)\r\n      .then(({ data }) => requiredFieldValidator(data)) // Validation of required fields - fullName, phone, email\r\n      .then((data) => {\r\n        // if everything ok then data structure is valid\r\n        dispatch({\r\n          type: VALID_STRUCTURE,\r\n          valid: true,\r\n        });\r\n        return data;\r\n      })\r\n      .then(addId) // Add id\r\n      .then(addDuplicationField) // Add duplicate with first found ID\r\n      .then((data) => {\r\n        dispatch({\r\n          type: PARSE_FILE,\r\n          payload: data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        if (err === WARNING_MESSAGE) {\r\n          dispatch({\r\n            type: VALID_STRUCTURE,\r\n            valid: false,\r\n          });\r\n        }\r\n      })\r\n      .finally(() => {\r\n        dispatch({\r\n          type: LOADING,\r\n          loading: false,\r\n        });\r\n      });\r\n  }\r\n};\r\n\r\nexport const deleteData = () => (dispatch) => {\r\n  dispatch({\r\n    type: DELETE_DATA,\r\n  });\r\n};\r\n\r\nexport const changeIsLoading = (loading) => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING,\r\n    loading,\r\n  });\r\n};\r\n","import { VALID_STRUCTURE } from './types';\r\n\r\nexport const changeValidity = (valid) => (dispatch) => {\r\n  dispatch({\r\n    type: VALID_STRUCTURE,\r\n    valid,\r\n  });\r\n};\r\n","const columns = [\r\n  {\r\n    Header: 'ID',\r\n    accessor: 'id',\r\n  },\r\n  {\r\n    Header: 'Full Name',\r\n    accessor: 'fullName',\r\n  },\r\n  {\r\n    Header: 'Phone',\r\n    accessor: 'phone',\r\n  },\r\n  {\r\n    Header: 'Email',\r\n    accessor: 'email',\r\n  },\r\n  {\r\n    Header: 'Age',\r\n    accessor: 'age',\r\n  },\r\n  {\r\n    Header: 'Experience',\r\n    accessor: 'experience',\r\n  },\r\n  {\r\n    Header: 'Yearly Income',\r\n    accessor: 'yearlyIncome',\r\n  },\r\n  {\r\n    Header: 'Has children',\r\n    accessor: 'hasChildren',\r\n  },\r\n  {\r\n    Header: 'License states',\r\n    accessor: 'licenseStates',\r\n  },\r\n  {\r\n    Header: 'Expiration date',\r\n    accessor: 'expirationDate',\r\n  },\r\n  {\r\n    Header: 'License number',\r\n    accessor: 'licenseNumber',\r\n  },\r\n  {\r\n    Header: 'Duplicate with',\r\n    accessor: 'duplicateWith',\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","import {\r\n  AGE,\r\n  EMAIL,\r\n  EXPERIENCE,\r\n  EXPIRATION_DATE,\r\n  HAS_CHILDREN,\r\n  LICENSE_NUMBER,\r\n  LICENSE_STATES,\r\n  PHONE,\r\n  YEARLY_INCOME,\r\n} from '../configs/header-accessors';\r\nimport { validate as emailValidator } from 'email-validator';\r\nimport {\r\n  DATE_FORMATS,\r\n  MAX_AGE,\r\n  MIN_YEARLY_INCOME,\r\n  MAX_YEARLY_INCOME,\r\n  MIN_AGE,\r\n  PHONE_FORMATS,\r\n  LICENSE_NUMBER_FORMATS,\r\n} from '../configs/constants';\r\nimport moment from 'moment';\r\nimport statesJSON from '../configs/states_titlecase.json';\r\n\r\nexport const isFullNameValid = (value) => {\r\n  if (typeof value !== 'string' || value.length === 0) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const isPhoneValid = (value) => {\r\n  if (typeof value !== 'string' || value.length === 0) {\r\n    return false;\r\n  }\r\n  return PHONE_FORMATS.some((reg) => reg.test(value));\r\n};\r\n\r\nexport const isEmailValid = (value) => {\r\n  if (typeof value !== 'string' || value.length === 0) {\r\n    return false;\r\n  }\r\n  return emailValidator(value);\r\n};\r\n\r\nexport const isAgeValid = (value) => {\r\n  const checkAge = (age) => {\r\n    return (\r\n      Number.isNaN(age) !== true &&\r\n      Number.isInteger(age) &&\r\n      age >= MIN_AGE &&\r\n      age <= MAX_AGE\r\n    );\r\n  };\r\n  const age = Number(value);\r\n  return checkAge(age);\r\n};\r\n\r\nexport const isExperienceValid = (value, age) => {\r\n  const checkExperience = (number, currentAge) => {\r\n    return number >= 0 && number <= currentAge - MIN_AGE;\r\n  };\r\n  const experienceNumber = Number(value);\r\n  const ageNumber = Number(age);\r\n  if (Number.isNaN(experienceNumber)) {\r\n    return false;\r\n  }\r\n  if (Number.isNaN(ageNumber) || !Number.isInteger(ageNumber)) {\r\n    return checkExperience(experienceNumber, MIN_AGE);\r\n  }\r\n  return checkExperience(experienceNumber, ageNumber);\r\n};\r\n\r\nexport const isYearlyIncomeValid = (value) => {\r\n  const checkYearlyIncome = (income) => {\r\n    return income >= MIN_YEARLY_INCOME && income <= MAX_YEARLY_INCOME;\r\n  };\r\n  const yearlyIncomeNumber = Number(value);\r\n  if (Number.isNaN(yearlyIncomeNumber)) {\r\n    return false;\r\n  }\r\n  return checkYearlyIncome(yearlyIncomeNumber);\r\n};\r\n\r\nexport const isExpirationDateValid = (value) => {\r\n  const isValidFormat = moment(value, DATE_FORMATS, true).isValid();\r\n  if (isValidFormat) {\r\n    return moment().diff(value) <= 0;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const isHasChildrenValid = (value) => {\r\n  return value === 'true' || value === 'false' || value.length === 0;\r\n};\r\n\r\nexport const isLicenseNumberValid = (value) => {\r\n  return LICENSE_NUMBER_FORMATS.some((reg) => reg.test(value));\r\n};\r\n\r\nexport const isLicenseStateValid = (value) => {\r\n  const currentStates = /\\|/.test(value) ? value.split(/\\s*\\|\\s*/) : [value];\r\n  return currentStates.filter(Boolean).every((str) => {\r\n    return statesJSON.some(({ name, abbreviation }) => {\r\n      return (\r\n        name.toLowerCase() === str.toLowerCase() ||\r\n        abbreviation.toLowerCase() === str.toLowerCase()\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\nconst validator = (value, header, row) => {\r\n  switch (header) {\r\n    case PHONE:\r\n      return isPhoneValid(value);\r\n    case EMAIL:\r\n      return isEmailValid(value);\r\n    case AGE:\r\n      return isAgeValid(value);\r\n    case EXPERIENCE:\r\n      return isExperienceValid(value, row.age);\r\n    case YEARLY_INCOME:\r\n      return isYearlyIncomeValid(value);\r\n    case EXPIRATION_DATE:\r\n      return isExpirationDateValid(value);\r\n    case HAS_CHILDREN:\r\n      return isHasChildrenValid(value);\r\n    case LICENSE_NUMBER:\r\n      return isLicenseNumberValid(value);\r\n    case LICENSE_STATES:\r\n      return isLicenseStateValid(value);\r\n    default:\r\n      return true;\r\n  }\r\n};\r\n\r\nexport default validator;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTable } from 'react-table';\r\nimport { INVALID_CELL } from '../../configs/constants';\r\nimport BTable from 'react-bootstrap/Table';\r\nimport columns from '../../configs/columns';\r\nimport validator from '../../utils/table-cell-validator';\r\n\r\nfunction Table() {\r\n  const data = useSelector((state) => state.data);\r\n\r\n  const { getTableProps, headerGroups, rows, prepareRow } = useTable({\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  return (\r\n    <BTable bordered hover {...getTableProps()}>\r\n      <thead className=\"thead-dark\">\r\n        {headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map((cell) => {\r\n                const { id: header } = cell.column;\r\n                const { value } = cell;\r\n                let isValid = validator(value, header, cell.row.original);\r\n                const cellProps = { ...cell.getCellProps() };\r\n                if (!isValid) {\r\n                  if (cellProps.hasOwnProperty('className')) {\r\n                    cellProps.className = `${cellProps.className} ${INVALID_CELL}`;\r\n                  } else {\r\n                    cellProps.className = INVALID_CELL;\r\n                  }\r\n                }\r\n                return <td {...cellProps}>{cell.render('Cell')}</td>;\r\n              })}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </BTable>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import Table from './Table';\r\nexport default Table;\r\n","import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\nimport {\r\n  WARNING_MESSAGE,\r\n  WARNING_ALERT_VARIANT,\r\n} from '../../configs/constants';\r\n\r\nfunction Warning() {\r\n  return (\r\n    <Container fluid=\"md\">\r\n      <Alert variant={WARNING_ALERT_VARIANT} className=\"mt-4 mb-4\">\r\n        <Alert.Heading className=\"text-center mt-4 mb-4\">\r\n          {WARNING_MESSAGE || 'Oops, something went wrong'}\r\n        </Alert.Heading>\r\n      </Alert>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Warning;\r\n","import Warning from './Warning';\r\nexport default Warning;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport UploadFile from '../UploadFile';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Table from '../Table';\r\nimport Warning from '../Warning';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction App() {\r\n  const valid = useSelector((state) => state.valid);\r\n  return (\r\n    <Container fluid>\r\n      <UploadFile />\r\n      {valid ? <Table /> : <Warning />}\r\n      {valid && <UploadFile />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import App from './App';\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { PARSE_FILE, DELETE_DATA } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PARSE_FILE:\r\n      return [...action.payload];\r\n    case DELETE_DATA:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { VALID_STRUCTURE } from '../actions/types';\r\n\r\nconst initialState = false;\r\n\r\nconst validationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case VALID_STRUCTURE:\r\n      return action.valid;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default validationReducer;\r\n","import { LOADING } from '../actions/types';\r\n\r\nconst initialState = false;\r\n\r\nconst loadingReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return action.loading;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loadingReducer;\r\n","import { combineReducers } from 'redux';\r\nimport dataReducer from './dataReducer';\r\nimport validationReducer from './validationReducer';\r\nimport loadingReducer from './loadingReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  data: dataReducer,\r\n  valid: validationReducer,\r\n  isLoading: loadingReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}